// src/App.js
import React, { useState } from "react";
import Login from "./components/Login";
import Signup from "./components/Signup";
import "./App.css";

function App() {
  const [isLogin, setIsLogin] = useState(true);

  const toggleAuthMode = () => {
    setIsLogin(!isLogin);
  };

  return (
    <div className="App">
      {isLogin ? (
        <Login onSwitchToSignup={toggleAuthMode} />
      ) : (
        <Signup onSwitchToLogin={toggleAuthMode} />
      )}
    </div>
  );
}



// src/components/Login.js
import React, { useState } from "react";
import "./../styles/Login.css";

const Login = ({ onSwitchToSignup }) => {
  const [formData, setFormData] = useState({
    username: "",
    password: "",
    phone: "",
    role: "customer"
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData({ ...formData, [name]: value });
  };

  const handleRoleChange = (role) => {
    setFormData({ ...formData, role });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    console.log("Login data:", formData);
  };

  return (
    <div className="login-container">
      <h2>Login</h2>
      <form onSubmit={handleSubmit}>
        <div className="input-field">
          <label>Username</label>
          <input
            type="text"
            name="username"
            value={formData.username}
            onChange={handleChange}
            required
          />
        </div>
        <div className="input-field">
          <label>Password</label>
          <input
            type="password"
            name="password"
            value={formData.password}
            onChange={handleChange}
            required
          />
        </div>
        <div className="input-field">
          <label>Phone Number</label>
          <input
            type="text"
            name="phone"
            value={formData.phone}
            onChange={handleChange}
            required
          />
        </div>
        <div className="role-selection">
          <label>Select Role</label>
          <div>
            <button
              type="button"
              className={formData.role === "admin" ? "active" : ""}
              onClick={() => handleRoleChange("admin")}
            >
              Admin
            </button>
            <button
              type="button"
              className={formData.role === "customer" ? "active" : ""}
              onClick={() => handleRoleChange("customer")}
            >
              Customer
            </button>
          </div>
        </div>
        <button type="submit">Login</button>
      </form>
      <p>
        Don't have an account?{" "}
        <span className="switch-link" onClick={onSwitchToSignup}>
          Sign up
        </span>
      </p>
    </div>
  );
};

export default Login;




// src/components/Signup.js
import React, { useState } from "react";
import "./../styles/Signup.css";

const Signup = ({ onSwitchToLogin }) => {
  const [formData, setFormData] = useState({
    username: "",
    password: "",
    confirmPassword: "",
    phone: "",
    role: "customer"
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData({ ...formData, [name]: value });
  };

  const handleRoleChange = (role) => {
    setFormData({ ...formData, role });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    if (formData.password !== formData.confirmPassword) {
      alert("Passwords do not match!");
      return;
    }
    console.log("Signup data:", formData);
  };

  return (
    <div className="signup-container">
      <h2>Signup</h2>
      <form onSubmit={handleSubmit}>
        <div className="input-field">
          <label>Username</label>
          <input
            type="text"
            name="username"
            value={formData.username}
            onChange={handleChange}
            required
          />
        </div>
        <div className="input-field">
          <label>Password</label>
          <input
            type="password"
            name="password"
            value={formData.password}
            onChange={handleChange}
            required
          />
        </div>
        <div className="input-field">
          <label>Confirm Password</label>
          <input
            type="password"
            name="confirmPassword"
            value={formData.confirmPassword}
            onChange={handleChange}
            required
          />
        </div>
        <div className="input-field">
          <label>Phone Number</label>
          <input
            type="text"
            name="phone"
            value={formData.phone}
            onChange={handleChange}
            required
          />
        </div>
        <div className="role-selection">
          <label>Select Role</label>
          <div>
            <button
              type="button"
              className={formData.role === "admin" ? "active" : ""}
              onClick={() => handleRoleChange("admin")}
            >
              Admin
            </button>
            <button
              type="button"
              className={formData.role === "customer" ? "active" : ""}
              onClick={() => handleRoleChange("customer")}
            >
              Customer
            </button>
          </div>
        </div>
        <button type="submit">Sign Up</button>
      </form>
      <p>
        Already have an account?{" "}
        <span className="switch-link" onClick={onSwitchToLogin}>
          Log in
        </span>
      </p>
    </div>
  );
};

export default Signup;



/* src/styles/Login.css */
.login-container {
  width: 300px;
  margin: 0 auto;
  padding: 20px;
  background-color: #f2f2f2;
  border-radius: 8px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

h2 {
  text-align: center;
}

.input-field {
  margin-bottom: 15px;
}

.input-field label {
  display: block;
  margin-bottom: 5px;
}

.input-field input {
  width: 100%;
  padding: 8px;
  box-sizing: border-box;
}

.role-selection {
  margin-bottom: 15px;
}

.role-selection button {
  margin-right: 10px;
  padding: 8px 16px;
  cursor: pointer;
}

button.active {
  background-color: #4caf50;
  color: white;
}

button {
  width: 100%;
  padding: 10px;
  background-color: #007bff;
  color: white;
  border: none;
  cursor: pointer;
}

.switch-link {
  color: #007bff;
  cursor: pointer;
}


/* src/styles/Signup.css */
.signup-container {
  width: 300px;
  margin: 0 auto;
  padding: 20px;
  background-color: #f2f2f2;
  border-radius: 8px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

h2 {
  text-align: center;
}

.input-field {
  margin-bottom: 15px;
}

.input-field label {
  display: block;
  margin-bottom: 5px;
}

.input-field input {
  width: 100%;
  padding: 8px;
  box-sizing: border-box;
}

.role-selection {
  margin-bottom: 15px;
}

.role-selection button {
  margin-right: 10px;
  padding: 8px 16px;
  cursor: pointer;
}

button.active {
  background-color: #4caf50;
  color: white;
}

button {
  width: 100%;
  padding: 10px

export default App;
